def print_params(a = 1, b = 'строка', c = True):
    print(a, b, c)

print_params() #вызов без аргументов, т.к параметры именованные, то можно не передвать аргументы
print_params(25, 30, "test") #задали параметры, вызов заменил параметры ф-ии на те что в вызове
print_params(b=1, a=1, c=1) # можно передать в другом порядке

print_params(b=25)  # вызов работает, но заменит значание параметра b
print_params(c=[1, 2, 3])  # вызов работает, но заменит знач-е параметра c на список

values_list = [25, 'hi', (1, 2, 3)]
values_dict = {'a': 'test', 'b': True, 'c': 2}
print_params(*values_list) #распакует список и заменит знач -я параметров функции на знач-я из списка
print_params(**values_dict)  #распакует список и заменит знач -я параметров функции на знач-я ключей из словаря

values_list_2 = [54.32, 'Строка']
print_params(*values_list_2, 42) #да работает, тк список имеет 2 параметра, мы его распаковали
                                     # и переменные встали на места первых двух переменных функции